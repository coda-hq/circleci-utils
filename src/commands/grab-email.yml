description: >
  This command grabs a codan email from CircleCI Username and sets it as USER_EMAIL

parameters:
  CODA_USER_ROSTER_TABLE_URL:
    description: |
      Fully qualified API URL to a table containing CIRCLECI_USERNAMEs to email aliases.    Must be of the form
      https://coda.io/apis/v1/docs/<DOCID>/tables/<TABLEID>/rows.
    type: string
    default: https://staging.coda.io/apis/v1/docs/s2i6oFeghW/tables/grid-QGyaiXZDwu/rows
  CODA_API_TOKEN:
    default: CODA_API_TOKEN
    description: |
      Env var of a token granted read access to the CODA_USER_ROSTER_TABLE_URL document.
    type: env_var_name
  CODA_CIRCLECI_USER_NAME_COL:
    description: |
      Coda columnId of the column storing the CircleCI username.
    type: string
    default: c-6ni4kHGNwE
  CODA_CIRCLECI_USER_ALIAS_COL:
    description: |
      Coda columnId of the column storing the user alias (when using EMAIL_DOMAIN), or fully qualified email.
    type: string
    default: c-26If9Zttyp
  EMAIL_DOMAIN:
    description: |
      Optional email domain for users within the workspace.   Must be specified if user aliases are not fully qualified.
    type: string
    default: coda.io

steps:
  - run:
      name: Get User Email
      command: |
        set -eo pipefail
        USER_ALIAS=$(curl -s -H "Authorization: Bearer ${CODA_API_TOKEN}" \
        -G --data-urlencode "query=c-6ni4kHGNwE:\"${CIRCLE_USERNAME}\"" \
        'https://staging.coda.io/apis/v1/docs/s2i6oFeghW/tables/grid-QGyaiXZDwu/rows' \
        | jq '.items[0].values."c-26If9Zttyp"' | tr -d '"')
        if [ $USER_ALIAS != "null" ]; then
          USER_EMAIL=$([[ "${USER_ALIAS}" == *@* ]] && echo "$USER_ALIAS" || echo "${USER_ALIAS}@coda.io")
          echo "export USER_EMAIL=${USER_EMAIL}" >> $BASH_ENV
        else
          echo "export USER_EMAIL=''" >> $BASH_ENV
        fi